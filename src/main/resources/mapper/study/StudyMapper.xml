<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.westudy.study.mapper.StudyMapper">
    <insert id="insertStudy" parameterType="com.westudy.study.entity.Study" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO study (user_id, post_id, title, location, max_member, state, created_at, delete_at)
        VALUES (#{userId}, #{postId}, #{title}, #{location}, #{maxMember}, #{state}, now(), NULL)
    </insert>

    <update id="updateStudy" parameterType="com.westudy.study.dto.StudyUpdateDTO">
        UPDATE study
        SET title = #{title}, location = #{location}, max_member = #{maxMember}, state = #{state}
        WHERE id = #{id}
    </update>

    <update id="deleteStudy">
        UPDATE study
        SET delete_at = now()
        WHERE id = #{id}
    </update>
    <update id="updateStudyState" parameterType="com.westudy.study.enums.StudyStates">
        UPDATE study
        SET state = #{state}
        WHERE id = #{id}
    </update>

    <select id="findByStudyId" resultType="com.westudy.study.dto.StudyResponseDTO">
        SELECT id, post_id, user_id, title, location, max_member, state
        FROM study
        WHERE id = #{id} AND delete_at IS NULL
    </select>

    <select id="findByPostId" resultType="com.westudy.study.dto.StudyResponseDTO">
        SELECT id, title, location, max_member, state
        FROM study
        WHERE post_id = #{id} AND delete_at IS NULL
    </select>

    <select id="findStudy" resultType="com.westudy.study.dto.StudyResponseDTO">
        SELECT id, post_id, user_id, title, location, max_member, state
        FROM study
        WHERE delete_at IS NULL
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>
    <select id="countStudy" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM study
        WHERE delete_at IS NULL
    </select>

    <select id="findSearchStudy" resultType="com.westudy.study.dto.StudyResponseDTO">
        SELECT id, post_id, user_id, title, location, max_member, state
        FROM study
        WHERE delete_at IS NULL AND title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{page}
    </select>

    <select id="countSearchStudy" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM study
        WHERE delete_at IS NULL AND title LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="findStudyWriter" resultType="java.lang.Long">
        SELECT user_id
        FROM study
        WHERE id = #{id}
    </select>
</mapper>